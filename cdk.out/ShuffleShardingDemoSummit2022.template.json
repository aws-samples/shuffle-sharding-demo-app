{
  "Resources": {
    "vpcA2121C38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/Resource"
      }
    },
    "vpcPublicSubnet1Subnet2E65531E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/Subnet"
      }
    },
    "vpcPublicSubnet1RouteTable48A2DF9B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/RouteTable"
      }
    },
    "vpcPublicSubnet1RouteTableAssociation5D3F4579": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet1Subnet2E65531E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "vpcPublicSubnet1DefaultRoute10708846": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "vpcPublicSubnet1EIPDA49DCBE": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/EIP"
      }
    },
    "vpcPublicSubnet1NATGateway9C16659E": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "vpcPublicSubnet1Subnet2E65531E"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet1EIPDA49DCBE",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/NATGateway"
      }
    },
    "vpcPublicSubnet2Subnet009B674F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/Subnet"
      }
    },
    "vpcPublicSubnet2RouteTableEB40D4CB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/RouteTable"
      }
    },
    "vpcPublicSubnet2RouteTableAssociation21F81B59": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet2Subnet009B674F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "vpcPublicSubnet2DefaultRouteA1EC0F60": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "vpcPublicSubnet2EIP9B3743B1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/EIP"
      }
    },
    "vpcPublicSubnet2NATGateway9B8AE11A": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "vpcPublicSubnet2Subnet009B674F"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet2EIP9B3743B1",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/NATGateway"
      }
    },
    "vpcPublicSubnet3Subnet11B92D7C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/Subnet"
      }
    },
    "vpcPublicSubnet3RouteTableA3C00665": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/RouteTable"
      }
    },
    "vpcPublicSubnet3RouteTableAssociationD102D1C4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet3RouteTableA3C00665"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet3Subnet11B92D7C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/RouteTableAssociation"
      }
    },
    "vpcPublicSubnet3DefaultRoute3F356A11": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet3RouteTableA3C00665"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/DefaultRoute"
      }
    },
    "vpcPublicSubnet3EIP2C3B9D91": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/EIP"
      }
    },
    "vpcPublicSubnet3NATGateway82F6CA9E": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "vpcPublicSubnet3Subnet11B92D7C"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet3EIP2C3B9D91",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/NATGateway"
      }
    },
    "vpcPrivateSubnet1Subnet934893E8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/Subnet"
      }
    },
    "vpcPrivateSubnet1RouteTableB41A48CC": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/RouteTable"
      }
    },
    "vpcPrivateSubnet1RouteTableAssociation67945127": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet1Subnet934893E8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "vpcPrivateSubnet1DefaultRoute1AA8E2E5": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet1NATGateway9C16659E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "vpcPrivateSubnet2Subnet7031C2BA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/Subnet"
      }
    },
    "vpcPrivateSubnet2RouteTable7280F23E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/RouteTable"
      }
    },
    "vpcPrivateSubnet2RouteTableAssociation007E94D3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "vpcPrivateSubnet2DefaultRouteB0E07F99": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet2NATGateway9B8AE11A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "vpcPrivateSubnet3Subnet985AC459": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/Subnet"
      }
    },
    "vpcPrivateSubnet3RouteTable24DA79A0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/RouteTable"
      }
    },
    "vpcPrivateSubnet3RouteTableAssociationC58B3C2C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet3RouteTable24DA79A0"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet3Subnet985AC459"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "vpcPrivateSubnet3DefaultRoute30C45F47": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet3RouteTable24DA79A0"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet3NATGateway82F6CA9E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/DefaultRoute"
      }
    },
    "vpcIGWE57CBDCA": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/IGW"
      }
    },
    "vpcVPCGW7984C166": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "InternetGatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/VPCGW"
      }
    },
    "cwD67736ED": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"widgets\":[{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"activeConnectionsCount\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "activeConnectionsCount90209303",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"totalConnectionsCount\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "totalConnectionsCount347BE3AF",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=1\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm11F7E5553",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=2\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm2999D08C3",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=3\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm31AD0B1D4",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=4\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm41E1EABDA",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=5\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm55A7A9B80",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=6\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm6E9103F20",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=7\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm72B63C8EB",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=8\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm89780A5AA",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=9\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm9CCB0190F",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=10\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm10F7411D08",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=11\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm119A7F38CB",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=12\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm120A1E1BC0",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=13\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm13F804506B",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=14\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm14E02C354A",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=15\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm15A548A2EF",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=16\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm16C2C3124D",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=17\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm17A4868F9F",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=18\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm188C502F79",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=19\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm19AA4A29B3",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=20\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm208621A08C",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=21\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm2113743F83",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=22\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm2255BA4DB5",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=23\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm2389B912D9",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=24\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm24AE4ADD78",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=25\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm25164E7B96",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=26\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm260BD2CD3D",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=27\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm2700DDEA10",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=28\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm28A420F7B4",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"main (/)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarmmainB23BFCDF",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}}]}"
            ]
          ]
        },
        "DashboardName": "ShuffleShardingSummit2022"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/cw/Resource"
      }
    },
    "AppLoadBalancer0268F95E": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "AppLoadBalancerSecurityGroupC44CD584",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "vpcPublicSubnet1Subnet2E65531E"
          },
          {
            "Ref": "vpcPublicSubnet2Subnet009B674F"
          },
          {
            "Ref": "vpcPublicSubnet3Subnet11B92D7C"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "vpcPublicSubnet1DefaultRoute10708846",
        "vpcPublicSubnet2DefaultRouteA1EC0F60",
        "vpcPublicSubnet3DefaultRoute3F356A11"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/Resource"
      }
    },
    "AppLoadBalancerSecurityGroupC44CD584": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB ShuffleShardingDemoSummit2022AppLoadBalancer55EF14E6",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/Resource"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker1InstanceSecurityGroup8148D3A980DC07EF48": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker1InstanceSecurityGroup8148D3A9:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker1InstanceSecurityGroup59622567",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker1InstanceSecurityGroup8148D3A9:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker2InstanceSecurityGroup1B72995980E2008501": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker2InstanceSecurityGroup1B729959:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker2InstanceSecurityGroup23BD1914",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker2InstanceSecurityGroup1B729959:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker3InstanceSecurityGroup5AB6ED358044AB1314": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker3InstanceSecurityGroup5AB6ED35:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker3InstanceSecurityGroup8D987E06",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker3InstanceSecurityGroup5AB6ED35:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker4InstanceSecurityGroup299E234E80D4F99100": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker4InstanceSecurityGroup299E234E:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker4InstanceSecurityGroupAB185FF0",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker4InstanceSecurityGroup299E234E:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker5InstanceSecurityGroupF3FF94B580ED7F0D4F": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker5InstanceSecurityGroupF3FF94B5:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker5InstanceSecurityGroup75CD5E34",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker5InstanceSecurityGroupF3FF94B5:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker6InstanceSecurityGroup873FDCEA803CF8E9E6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker6InstanceSecurityGroup873FDCEA:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker6InstanceSecurityGroup44BEAA0F",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker6InstanceSecurityGroup873FDCEA:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker7InstanceSecurityGroupE8F87D4A80554C94A6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker7InstanceSecurityGroupE8F87D4A:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker7InstanceSecurityGroup7AC82168",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker7InstanceSecurityGroupE8F87D4A:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker8InstanceSecurityGroupB04DB74C806E9F18F0": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker8InstanceSecurityGroupB04DB74C:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker8InstanceSecurityGroup1482F9A6",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker8InstanceSecurityGroupB04DB74C:80"
      }
    },
    "AppLoadBalancerAppMainListener100632E2": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "MessageBody": "Invalid Request. Please include specific key",
              "StatusCode": "400"
            },
            "Type": "fixed-response"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "AppLoadBalancer0268F95E"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker2Rule60B444E5": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker204A96BDA"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "1"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 1
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker2Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker3RuleFB3F93E8": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker3FEF5AB85"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "2"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 2
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker3Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker4RuleB76D6B7A": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker4E3E6D1E8"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "3"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 3
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker4Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker5Rule907034C9": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker5ED99ED05"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "4"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 4
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker5Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker6Rule137B1663": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker6DD3E9B3E"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "5"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 5
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker6Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker7Rule8DE768B7": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker779211DA2"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "6"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 6
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker7Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker8RuleE223408D": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker8D5AFAE63"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "7"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 7
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker8Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker3Rule98EF9A72": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker3B75B2CCD"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "8"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 8
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker3Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker4Rule7B936722": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker48BEA5717"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "9"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 9
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker4Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker5Rule1333F564": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker5AF7004C9"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "10"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 10
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker5Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker6Rule15F2984F": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker619605E89"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "11"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 11
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker6Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker7Rule98071AAD": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker796A220FC"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "12"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 12
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker7Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker8Rule0D3C3BEA": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker82B324B42"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "13"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 13
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker8Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker3Worker4Rule02549A56": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker3Worker4B1041CD7"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "14"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 14
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker3-Worker4Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker3Worker5Rule2907BF1E": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker3Worker50D930F13"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "15"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 15
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker3-Worker5Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker3Worker6Rule33FA5A3E": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker3Worker641AC8F3F"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "16"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 16
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker3-Worker6Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker3Worker7Rule78F94994": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker3Worker760686153"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "17"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 17
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker3-Worker7Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker3Worker8RuleCADA011F": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker3Worker89C0D19B2"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "18"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 18
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker3-Worker8Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker4Worker5Rule58935595": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker4Worker587924F2A"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "19"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 19
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker4-Worker5Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker4Worker6Rule5639EABC": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker4Worker63E31F49B"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "20"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 20
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker4-Worker6Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker4Worker7RuleF937CD37": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker4Worker7199003A4"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "21"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 21
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker4-Worker7Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker4Worker8Rule64D2D7E0": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker4Worker894321B5F"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "22"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 22
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker4-Worker8Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker5Worker6RuleD773B1B8": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker5Worker641006A7B"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "23"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 23
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker5-Worker6Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker5Worker7RuleD767507E": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker5Worker7FAB29F68"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "24"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 24
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker5-Worker7Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker5Worker8RuleBDABC5FD": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker5Worker8474B8514"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "25"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 25
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker5-Worker8Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker6Worker7Rule971BD14A": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker6Worker7B4E384DE"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "26"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 26
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker6-Worker7Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker6Worker8RuleB77C08FD": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker6Worker8BF3DDCC7"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "27"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 27
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker6-Worker8Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker7Worker8Rule0FBE6D93": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker7Worker82850D095"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "28"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 28
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker7-Worker8Rule/Resource"
      }
    },
    "activeConnectionsCount90209303": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "LoadBalancerFullName"
              ]
            }
          }
        ],
        "MetricName": "ActiveConnectionCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 10
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/activeConnectionsCount/Resource"
      }
    },
    "totalConnectionsCount347BE3AF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "LoadBalancerFullName"
              ]
            }
          }
        ],
        "MetricName": "RequestCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 10
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/totalConnectionsCount/Resource"
      }
    },
    "Worker1InstanceSecurityGroup59622567": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker1/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker1"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceSecurityGroup/Resource"
      }
    },
    "Worker1InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480B350A71F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker1InstanceSecurityGroup59622567",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker1InstanceRoleC8F05946": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker1readTagsDFE7409E"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceRole/Resource"
      }
    },
    "Worker1InstanceProfileED7A1457": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker1InstanceRoleC8F05946"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceProfile"
      }
    },
    "Worker1C6282B125756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker1InstanceProfileED7A1457"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker1InstanceSecurityGroup59622567",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker1"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker1InstanceRoleC8F05946"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/Resource"
      }
    },
    "Worker1readTagsDFE7409E": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1readTags/Resource"
      }
    },
    "Worker2InstanceSecurityGroup23BD1914": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker2/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker2"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceSecurityGroup/Resource"
      }
    },
    "Worker2InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480C8C06394": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker2InstanceSecurityGroup23BD1914",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker2InstanceRole4CE57811": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker2readTags643E321C"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceRole/Resource"
      }
    },
    "Worker2InstanceProfile7D1FBEB1": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker2InstanceRole4CE57811"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceProfile"
      }
    },
    "Worker21CDE475D5756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker2InstanceProfile7D1FBEB1"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker2InstanceSecurityGroup23BD1914",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet3Subnet985AC459"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker2"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker2InstanceRole4CE57811"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/Resource"
      }
    },
    "Worker2readTags643E321C": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2readTags/Resource"
      }
    },
    "Worker3InstanceSecurityGroup8D987E06": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker3/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker3"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceSecurityGroup/Resource"
      }
    },
    "Worker3InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480D631F650": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker3InstanceSecurityGroup8D987E06",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker3InstanceRoleE786E787": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker3readTags6E2C7F22"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceRole/Resource"
      }
    },
    "Worker3InstanceProfile302920F9": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker3InstanceRoleE786E787"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceProfile"
      }
    },
    "Worker356A1B6C45756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "az-notfound",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker3InstanceProfile302920F9"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker3InstanceSecurityGroup8D987E06",
              "GroupId"
            ]
          }
        ],
        "SubnetId": "s-notfound",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker3"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker3InstanceRoleE786E787"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/Resource"
      }
    },
    "Worker3readTags6E2C7F22": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3readTags/Resource"
      }
    },
    "Worker4InstanceSecurityGroupAB185FF0": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker4/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker4"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceSecurityGroup/Resource"
      }
    },
    "Worker4InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424803C1902DC": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker4InstanceSecurityGroupAB185FF0",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker4InstanceRoleA8AACB09": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker4readTags9AD8236D"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceRole/Resource"
      }
    },
    "Worker4InstanceProfileEAEB7A34": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker4InstanceRoleA8AACB09"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceProfile"
      }
    },
    "Worker49A67C52E5756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "az-notfound",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker4InstanceProfileEAEB7A34"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker4InstanceSecurityGroupAB185FF0",
              "GroupId"
            ]
          }
        ],
        "SubnetId": "s-notfound",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker4"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker4InstanceRoleA8AACB09"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/Resource"
      }
    },
    "Worker4readTags9AD8236D": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4readTags/Resource"
      }
    },
    "Worker5InstanceSecurityGroup75CD5E34": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker5/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker5"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5/InstanceSecurityGroup/Resource"
      }
    },
    "Worker5InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424807BF4B0A2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker5InstanceSecurityGroup75CD5E34",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker5InstanceRoleF26F9FDC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker5readTags4B6556EF"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5/InstanceRole/Resource"
      }
    },
    "Worker5InstanceProfile3F156510": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker5InstanceRoleF26F9FDC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5/InstanceProfile"
      }
    },
    "Worker58AAF5F375756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "az-notfound",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker5InstanceProfile3F156510"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker5InstanceSecurityGroup75CD5E34",
              "GroupId"
            ]
          }
        ],
        "SubnetId": "s-notfound",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker5"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker5InstanceRoleF26F9FDC"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5/Resource"
      }
    },
    "Worker5readTags4B6556EF": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5readTags/Resource"
      }
    },
    "Worker6InstanceSecurityGroup44BEAA0F": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker6/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker6"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6/InstanceSecurityGroup/Resource"
      }
    },
    "Worker6InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480BEB4722A": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker6InstanceSecurityGroup44BEAA0F",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker6InstanceRole078C756F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker6readTags043E8CE4"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6/InstanceRole/Resource"
      }
    },
    "Worker6InstanceProfile9140A7D6": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker6InstanceRole078C756F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6/InstanceProfile"
      }
    },
    "Worker6A13C0CBB5756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker6InstanceProfile9140A7D6"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker6InstanceSecurityGroup44BEAA0F",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet1Subnet934893E8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker6"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker6InstanceRole078C756F"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6/Resource"
      }
    },
    "Worker6readTags043E8CE4": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6readTags/Resource"
      }
    },
    "Worker7InstanceSecurityGroup7AC82168": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker7/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker7"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker7/InstanceSecurityGroup/Resource"
      }
    },
    "Worker7InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480A4D9FE57": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker7InstanceSecurityGroup7AC82168",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker7/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker7InstanceRoleCC51AD6B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker7readTagsB5DD0B5E"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker7/InstanceRole/Resource"
      }
    },
    "Worker7InstanceProfile5317ACEF": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker7InstanceRoleCC51AD6B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker7/InstanceProfile"
      }
    },
    "Worker7A4F526855756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker7InstanceProfile5317ACEF"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker7InstanceSecurityGroup7AC82168",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker7"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker7InstanceRoleCC51AD6B"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker7/Resource"
      }
    },
    "Worker7readTagsB5DD0B5E": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker7readTags/Resource"
      }
    },
    "Worker8InstanceSecurityGroup1482F9A6": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker8/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker8"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker8/InstanceSecurityGroup/Resource"
      }
    },
    "Worker8InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA454248033E6A058": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker8InstanceSecurityGroup1482F9A6",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker8/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker8InstanceRoleA3712D02": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker8readTags1535FF51"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker8/InstanceRole/Resource"
      }
    },
    "Worker8InstanceProfileD09D452E": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker8InstanceRoleA3712D02"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker8/InstanceProfile"
      }
    },
    "Worker83BF111D75756e0f615c1f3fd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker8InstanceProfileD09D452E"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker8InstanceSecurityGroup1482F9A6",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet3Subnet985AC459"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker8"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\npip install ec2-metadata\ncurl -o /home/ec2-user/buggy-webserver.py https://aws-well-architected-labs-virginia.s3.amazonaws.com/Reliability/300_Fault_Isolation_with_Shuffle_Sharding/buggy-webserver.py\nnohup python /home/ec2-user/buggy-webserver.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker8InstanceRoleA3712D02"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker8/Resource"
      }
    },
    "Worker8readTags1535FF51": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker8readTags/Resource"
      }
    },
    "Worker1Worker204A96BDA": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B125756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker21CDE475D5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker2/Resource"
      }
    },
    "canary1ArtifactsBucket33D896F3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/ArtifactsBucket/Resource"
      }
    },
    "canary1ArtifactsBucketPolicy07FC42D3": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary1ArtifactsBucket33D896F3"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary1ArtifactsBucket33D896F3",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary1ArtifactsBucket33D896F3",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary1ServiceRole5838E95C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary1ArtifactsBucket33D896F3",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary1ArtifactsBucket33D896F3",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/ServiceRole/Resource"
      }
    },
    "canary14080B0CD": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary1ArtifactsBucket33D896F3"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=1';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary1ServiceRole5838E95C",
            "Arn"
          ]
        },
        "Name": "shuffleshardinge2181d",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/Resource"
      }
    },
    "alarm11F7E5553": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary14080B0CD"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-1/Resource"
      }
    },
    "Worker1Worker3FEF5AB85": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B125756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker356A1B6C45756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker3/Resource"
      }
    },
    "canary2ArtifactsBucket21016E4A": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/ArtifactsBucket/Resource"
      }
    },
    "canary2ArtifactsBucketPolicy8BB17232": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary2ArtifactsBucket21016E4A"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary2ArtifactsBucket21016E4A",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary2ArtifactsBucket21016E4A",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary2ServiceRole7902C7AF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary2ArtifactsBucket21016E4A",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary2ArtifactsBucket21016E4A",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/ServiceRole/Resource"
      }
    },
    "canary29E18EC3E": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary2ArtifactsBucket21016E4A"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=2';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary2ServiceRole7902C7AF",
            "Arn"
          ]
        },
        "Name": "shuffleshardingb7e912",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/Resource"
      }
    },
    "alarm2999D08C3": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary29E18EC3E"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-2/Resource"
      }
    },
    "Worker1Worker4E3E6D1E8": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B125756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker49A67C52E5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker4/Resource"
      }
    },
    "canary3ArtifactsBucketF9392541": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/ArtifactsBucket/Resource"
      }
    },
    "canary3ArtifactsBucketPolicy420D8DBC": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary3ArtifactsBucketF9392541"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary3ArtifactsBucketF9392541",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary3ArtifactsBucketF9392541",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary3ServiceRoleBCD653D4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary3ArtifactsBucketF9392541",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary3ArtifactsBucketF9392541",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/ServiceRole/Resource"
      }
    },
    "canary322244DE0": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary3ArtifactsBucketF9392541"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=3';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary3ServiceRoleBCD653D4",
            "Arn"
          ]
        },
        "Name": "shufflesharding807db1",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/Resource"
      }
    },
    "alarm31AD0B1D4": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary322244DE0"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-3/Resource"
      }
    },
    "Worker1Worker5ED99ED05": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B125756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker58AAF5F375756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker5/Resource"
      }
    },
    "canary4ArtifactsBucketB70F6265": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/ArtifactsBucket/Resource"
      }
    },
    "canary4ArtifactsBucketPolicy71FCF8FD": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary4ArtifactsBucketB70F6265"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary4ArtifactsBucketB70F6265",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary4ArtifactsBucketB70F6265",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary4ServiceRole6785A63E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary4ArtifactsBucketB70F6265",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary4ArtifactsBucketB70F6265",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/ServiceRole/Resource"
      }
    },
    "canary4CE6F078C": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary4ArtifactsBucketB70F6265"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=4';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary4ServiceRole6785A63E",
            "Arn"
          ]
        },
        "Name": "shuffleshardingcefe9c",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/Resource"
      }
    },
    "alarm41E1EABDA": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary4CE6F078C"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-4/Resource"
      }
    },
    "Worker1Worker6DD3E9B3E": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B125756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker6A13C0CBB5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker6/Resource"
      }
    },
    "canary5ArtifactsBucketD0E7CC1F": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/ArtifactsBucket/Resource"
      }
    },
    "canary5ArtifactsBucketPolicy0E1B4604": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary5ArtifactsBucketD0E7CC1F"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary5ArtifactsBucketD0E7CC1F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary5ArtifactsBucketD0E7CC1F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary5ServiceRole36F702AC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary5ArtifactsBucketD0E7CC1F",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary5ArtifactsBucketD0E7CC1F",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/ServiceRole/Resource"
      }
    },
    "canary5DFC6FE7A": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary5ArtifactsBucketD0E7CC1F"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=5';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary5ServiceRole36F702AC",
            "Arn"
          ]
        },
        "Name": "shuffleshardingedddb8",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/Resource"
      }
    },
    "alarm55A7A9B80": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary5DFC6FE7A"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-5/Resource"
      }
    },
    "Worker1Worker779211DA2": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B125756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker7A4F526855756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker7/Resource"
      }
    },
    "canary6ArtifactsBucket88273382": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/ArtifactsBucket/Resource"
      }
    },
    "canary6ArtifactsBucketPolicyFAD60CAE": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary6ArtifactsBucket88273382"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary6ArtifactsBucket88273382",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary6ArtifactsBucket88273382",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary6ServiceRole6191E6F6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary6ArtifactsBucket88273382",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary6ArtifactsBucket88273382",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/ServiceRole/Resource"
      }
    },
    "canary627C8465C": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary6ArtifactsBucket88273382"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=6';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary6ServiceRole6191E6F6",
            "Arn"
          ]
        },
        "Name": "shufflesharding22850d",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/Resource"
      }
    },
    "alarm6E9103F20": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary627C8465C"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-6/Resource"
      }
    },
    "Worker1Worker8D5AFAE63": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B125756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker83BF111D75756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker8/Resource"
      }
    },
    "canary7ArtifactsBucket06DBDD63": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-7/ArtifactsBucket/Resource"
      }
    },
    "canary7ArtifactsBucketPolicyDDD2FEA8": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary7ArtifactsBucket06DBDD63"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary7ArtifactsBucket06DBDD63",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary7ArtifactsBucket06DBDD63",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-7/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary7ServiceRoleBB05C835": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary7ArtifactsBucket06DBDD63",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary7ArtifactsBucket06DBDD63",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-7/ServiceRole/Resource"
      }
    },
    "canary721C5B724": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary7ArtifactsBucket06DBDD63"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=7';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary7ServiceRoleBB05C835",
            "Arn"
          ]
        },
        "Name": "shuffleshardingf4c343",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-7/Resource"
      }
    },
    "alarm72B63C8EB": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary721C5B724"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-7/Resource"
      }
    },
    "Worker2Worker3B75B2CCD": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475D5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker356A1B6C45756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker3/Resource"
      }
    },
    "canary8ArtifactsBucket1A5EE162": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-8/ArtifactsBucket/Resource"
      }
    },
    "canary8ArtifactsBucketPolicy68EE1286": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary8ArtifactsBucket1A5EE162"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary8ArtifactsBucket1A5EE162",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary8ArtifactsBucket1A5EE162",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-8/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary8ServiceRole7A9BEC04": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary8ArtifactsBucket1A5EE162",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary8ArtifactsBucket1A5EE162",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-8/ServiceRole/Resource"
      }
    },
    "canary85F9B4A8D": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary8ArtifactsBucket1A5EE162"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=8';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary8ServiceRole7A9BEC04",
            "Arn"
          ]
        },
        "Name": "shufflesharding53f79d",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-8/Resource"
      }
    },
    "alarm89780A5AA": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary85F9B4A8D"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-8/Resource"
      }
    },
    "Worker2Worker48BEA5717": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475D5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker49A67C52E5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker4/Resource"
      }
    },
    "canary9ArtifactsBucket33C349E4": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-9/ArtifactsBucket/Resource"
      }
    },
    "canary9ArtifactsBucketPolicyD2C12F54": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary9ArtifactsBucket33C349E4"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary9ArtifactsBucket33C349E4",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary9ArtifactsBucket33C349E4",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-9/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary9ServiceRole6D6ED46A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary9ArtifactsBucket33C349E4",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary9ArtifactsBucket33C349E4",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-9/ServiceRole/Resource"
      }
    },
    "canary9F5539545": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary9ArtifactsBucket33C349E4"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=9';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary9ServiceRole6D6ED46A",
            "Arn"
          ]
        },
        "Name": "shufflesharding2df0ca",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-9/Resource"
      }
    },
    "alarm9CCB0190F": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary9F5539545"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-9/Resource"
      }
    },
    "Worker2Worker5AF7004C9": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475D5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker58AAF5F375756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker5/Resource"
      }
    },
    "canary10ArtifactsBucketA1B92508": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-10/ArtifactsBucket/Resource"
      }
    },
    "canary10ArtifactsBucketPolicyFF670B7C": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary10ArtifactsBucketA1B92508"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary10ArtifactsBucketA1B92508",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary10ArtifactsBucketA1B92508",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-10/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary10ServiceRole7FC1B5E0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary10ArtifactsBucketA1B92508",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary10ArtifactsBucketA1B92508",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-10/ServiceRole/Resource"
      }
    },
    "canary104538614C": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary10ArtifactsBucketA1B92508"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=10';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary10ServiceRole7FC1B5E0",
            "Arn"
          ]
        },
        "Name": "shuffleshardingd5c55c",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-10/Resource"
      }
    },
    "alarm10F7411D08": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary104538614C"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-10/Resource"
      }
    },
    "Worker2Worker619605E89": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475D5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker6A13C0CBB5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker6/Resource"
      }
    },
    "canary11ArtifactsBucketA86052DD": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-11/ArtifactsBucket/Resource"
      }
    },
    "canary11ArtifactsBucketPolicyF8914C0A": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary11ArtifactsBucketA86052DD"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary11ArtifactsBucketA86052DD",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary11ArtifactsBucketA86052DD",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-11/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary11ServiceRole835F7F35": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary11ArtifactsBucketA86052DD",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary11ArtifactsBucketA86052DD",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-11/ServiceRole/Resource"
      }
    },
    "canary11DC6B4090": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary11ArtifactsBucketA86052DD"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=11';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary11ServiceRole835F7F35",
            "Arn"
          ]
        },
        "Name": "shufflesharding66c37f",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-11/Resource"
      }
    },
    "alarm119A7F38CB": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary11DC6B4090"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-11/Resource"
      }
    },
    "Worker2Worker796A220FC": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475D5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker7A4F526855756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker7/Resource"
      }
    },
    "canary12ArtifactsBucketDACC0190": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-12/ArtifactsBucket/Resource"
      }
    },
    "canary12ArtifactsBucketPolicyF4F0EA3C": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary12ArtifactsBucketDACC0190"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary12ArtifactsBucketDACC0190",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary12ArtifactsBucketDACC0190",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-12/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary12ServiceRole624E5703": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary12ArtifactsBucketDACC0190",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary12ArtifactsBucketDACC0190",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-12/ServiceRole/Resource"
      }
    },
    "canary1270788AC3": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary12ArtifactsBucketDACC0190"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=12';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary12ServiceRole624E5703",
            "Arn"
          ]
        },
        "Name": "shufflesharding1bd360",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-12/Resource"
      }
    },
    "alarm120A1E1BC0": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary1270788AC3"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-12/Resource"
      }
    },
    "Worker2Worker82B324B42": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475D5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker83BF111D75756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker8/Resource"
      }
    },
    "canary13ArtifactsBucketDCDBCC28": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-13/ArtifactsBucket/Resource"
      }
    },
    "canary13ArtifactsBucketPolicyCB194CCE": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary13ArtifactsBucketDCDBCC28"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary13ArtifactsBucketDCDBCC28",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary13ArtifactsBucketDCDBCC28",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-13/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary13ServiceRoleCE766748": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary13ArtifactsBucketDCDBCC28",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary13ArtifactsBucketDCDBCC28",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-13/ServiceRole/Resource"
      }
    },
    "canary1371889517": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary13ArtifactsBucketDCDBCC28"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=13';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary13ServiceRoleCE766748",
            "Arn"
          ]
        },
        "Name": "shufflesharding118a13",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-13/Resource"
      }
    },
    "alarm13F804506B": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary1371889517"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-13/Resource"
      }
    },
    "Worker3Worker4B1041CD7": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker356A1B6C45756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker49A67C52E5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3-Worker4/Resource"
      }
    },
    "canary14ArtifactsBucket57F61DAB": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-14/ArtifactsBucket/Resource"
      }
    },
    "canary14ArtifactsBucketPolicy0A50D964": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary14ArtifactsBucket57F61DAB"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary14ArtifactsBucket57F61DAB",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary14ArtifactsBucket57F61DAB",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-14/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary14ServiceRoleD71A800F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary14ArtifactsBucket57F61DAB",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary14ArtifactsBucket57F61DAB",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-14/ServiceRole/Resource"
      }
    },
    "canary145446B7DE": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary14ArtifactsBucket57F61DAB"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=14';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary14ServiceRoleD71A800F",
            "Arn"
          ]
        },
        "Name": "shufflesharding919566",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-14/Resource"
      }
    },
    "alarm14E02C354A": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary145446B7DE"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-14/Resource"
      }
    },
    "Worker3Worker50D930F13": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker356A1B6C45756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker58AAF5F375756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3-Worker5/Resource"
      }
    },
    "canary15ArtifactsBucket4B5283F2": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-15/ArtifactsBucket/Resource"
      }
    },
    "canary15ArtifactsBucketPolicy5CA55CCF": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary15ArtifactsBucket4B5283F2"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary15ArtifactsBucket4B5283F2",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary15ArtifactsBucket4B5283F2",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-15/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary15ServiceRole3BAAE18A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary15ArtifactsBucket4B5283F2",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary15ArtifactsBucket4B5283F2",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-15/ServiceRole/Resource"
      }
    },
    "canary1575842AD5": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary15ArtifactsBucket4B5283F2"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=15';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary15ServiceRole3BAAE18A",
            "Arn"
          ]
        },
        "Name": "shufflesharding33ec79",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-15/Resource"
      }
    },
    "alarm15A548A2EF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary1575842AD5"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-15/Resource"
      }
    },
    "Worker3Worker641AC8F3F": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker356A1B6C45756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker6A13C0CBB5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3-Worker6/Resource"
      }
    },
    "canary16ArtifactsBucketEAED8D0D": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-16/ArtifactsBucket/Resource"
      }
    },
    "canary16ArtifactsBucketPolicyABA05F60": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary16ArtifactsBucketEAED8D0D"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary16ArtifactsBucketEAED8D0D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary16ArtifactsBucketEAED8D0D",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-16/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary16ServiceRole36354D5C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary16ArtifactsBucketEAED8D0D",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary16ArtifactsBucketEAED8D0D",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-16/ServiceRole/Resource"
      }
    },
    "canary16202242CE": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary16ArtifactsBucketEAED8D0D"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=16';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary16ServiceRole36354D5C",
            "Arn"
          ]
        },
        "Name": "shuffleshardinga33d48",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-16/Resource"
      }
    },
    "alarm16C2C3124D": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary16202242CE"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-16/Resource"
      }
    },
    "Worker3Worker760686153": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker356A1B6C45756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker7A4F526855756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3-Worker7/Resource"
      }
    },
    "canary17ArtifactsBucketC769ECDE": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-17/ArtifactsBucket/Resource"
      }
    },
    "canary17ArtifactsBucketPolicyACB59B55": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary17ArtifactsBucketC769ECDE"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary17ArtifactsBucketC769ECDE",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary17ArtifactsBucketC769ECDE",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-17/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary17ServiceRole32923D67": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary17ArtifactsBucketC769ECDE",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary17ArtifactsBucketC769ECDE",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-17/ServiceRole/Resource"
      }
    },
    "canary17C9BD7378": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary17ArtifactsBucketC769ECDE"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=17';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary17ServiceRole32923D67",
            "Arn"
          ]
        },
        "Name": "shuffleshardinge748f1",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-17/Resource"
      }
    },
    "alarm17A4868F9F": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary17C9BD7378"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-17/Resource"
      }
    },
    "Worker3Worker89C0D19B2": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker356A1B6C45756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker83BF111D75756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3-Worker8/Resource"
      }
    },
    "canary18ArtifactsBucket35BA37BC": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-18/ArtifactsBucket/Resource"
      }
    },
    "canary18ArtifactsBucketPolicyE70F0D09": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary18ArtifactsBucket35BA37BC"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary18ArtifactsBucket35BA37BC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary18ArtifactsBucket35BA37BC",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-18/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary18ServiceRoleBE383441": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary18ArtifactsBucket35BA37BC",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary18ArtifactsBucket35BA37BC",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-18/ServiceRole/Resource"
      }
    },
    "canary18DF350E4F": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary18ArtifactsBucket35BA37BC"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=18';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary18ServiceRoleBE383441",
            "Arn"
          ]
        },
        "Name": "shuffleshardingea9290",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-18/Resource"
      }
    },
    "alarm188C502F79": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary18DF350E4F"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-18/Resource"
      }
    },
    "Worker4Worker587924F2A": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker49A67C52E5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker58AAF5F375756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4-Worker5/Resource"
      }
    },
    "canary19ArtifactsBucket7A491FF2": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-19/ArtifactsBucket/Resource"
      }
    },
    "canary19ArtifactsBucketPolicy6E8C51E0": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary19ArtifactsBucket7A491FF2"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary19ArtifactsBucket7A491FF2",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary19ArtifactsBucket7A491FF2",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-19/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary19ServiceRole52AEC38F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary19ArtifactsBucket7A491FF2",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary19ArtifactsBucket7A491FF2",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-19/ServiceRole/Resource"
      }
    },
    "canary19F53F6FDF": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary19ArtifactsBucket7A491FF2"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=19';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary19ServiceRole52AEC38F",
            "Arn"
          ]
        },
        "Name": "shuffleshardingc2c336",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-19/Resource"
      }
    },
    "alarm19AA4A29B3": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary19F53F6FDF"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-19/Resource"
      }
    },
    "Worker4Worker63E31F49B": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker49A67C52E5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker6A13C0CBB5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4-Worker6/Resource"
      }
    },
    "canary20ArtifactsBucketFD85F7D1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-20/ArtifactsBucket/Resource"
      }
    },
    "canary20ArtifactsBucketPolicy1C954B62": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary20ArtifactsBucketFD85F7D1"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary20ArtifactsBucketFD85F7D1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary20ArtifactsBucketFD85F7D1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-20/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary20ServiceRole9625D24A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary20ArtifactsBucketFD85F7D1",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary20ArtifactsBucketFD85F7D1",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-20/ServiceRole/Resource"
      }
    },
    "canary20FF51B00B": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary20ArtifactsBucketFD85F7D1"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=20';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary20ServiceRole9625D24A",
            "Arn"
          ]
        },
        "Name": "shufflesharding1fa064",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-20/Resource"
      }
    },
    "alarm208621A08C": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary20FF51B00B"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-20/Resource"
      }
    },
    "Worker4Worker7199003A4": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker49A67C52E5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker7A4F526855756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4-Worker7/Resource"
      }
    },
    "canary21ArtifactsBucket4303F414": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-21/ArtifactsBucket/Resource"
      }
    },
    "canary21ArtifactsBucketPolicy39B557E6": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary21ArtifactsBucket4303F414"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary21ArtifactsBucket4303F414",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary21ArtifactsBucket4303F414",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-21/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary21ServiceRoleBEB9E5A2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary21ArtifactsBucket4303F414",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary21ArtifactsBucket4303F414",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-21/ServiceRole/Resource"
      }
    },
    "canary218D77A216": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary21ArtifactsBucket4303F414"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=21';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary21ServiceRoleBEB9E5A2",
            "Arn"
          ]
        },
        "Name": "shufflesharding83efe5",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-21/Resource"
      }
    },
    "alarm2113743F83": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary218D77A216"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-21/Resource"
      }
    },
    "Worker4Worker894321B5F": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker49A67C52E5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker83BF111D75756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4-Worker8/Resource"
      }
    },
    "canary22ArtifactsBucket72D7A1DA": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-22/ArtifactsBucket/Resource"
      }
    },
    "canary22ArtifactsBucketPolicyD203DD06": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary22ArtifactsBucket72D7A1DA"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary22ArtifactsBucket72D7A1DA",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary22ArtifactsBucket72D7A1DA",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-22/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary22ServiceRoleFED6C742": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary22ArtifactsBucket72D7A1DA",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary22ArtifactsBucket72D7A1DA",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-22/ServiceRole/Resource"
      }
    },
    "canary22FBB93C91": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary22ArtifactsBucket72D7A1DA"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=22';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary22ServiceRoleFED6C742",
            "Arn"
          ]
        },
        "Name": "shuffleshardinge98c10",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-22/Resource"
      }
    },
    "alarm2255BA4DB5": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary22FBB93C91"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-22/Resource"
      }
    },
    "Worker5Worker641006A7B": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker58AAF5F375756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker6A13C0CBB5756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5-Worker6/Resource"
      }
    },
    "canary23ArtifactsBucket15F37555": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-23/ArtifactsBucket/Resource"
      }
    },
    "canary23ArtifactsBucketPolicyE93E85D3": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary23ArtifactsBucket15F37555"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary23ArtifactsBucket15F37555",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary23ArtifactsBucket15F37555",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-23/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary23ServiceRoleFED05968": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary23ArtifactsBucket15F37555",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary23ArtifactsBucket15F37555",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-23/ServiceRole/Resource"
      }
    },
    "canary23A37E0D84": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary23ArtifactsBucket15F37555"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=23';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary23ServiceRoleFED05968",
            "Arn"
          ]
        },
        "Name": "shufflesharding3220cc",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-23/Resource"
      }
    },
    "alarm2389B912D9": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary23A37E0D84"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-23/Resource"
      }
    },
    "Worker5Worker7FAB29F68": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker58AAF5F375756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker7A4F526855756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5-Worker7/Resource"
      }
    },
    "canary24ArtifactsBucketB83B92A6": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-24/ArtifactsBucket/Resource"
      }
    },
    "canary24ArtifactsBucketPolicyAD921F38": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary24ArtifactsBucketB83B92A6"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary24ArtifactsBucketB83B92A6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary24ArtifactsBucketB83B92A6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-24/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary24ServiceRole57F3B8BD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary24ArtifactsBucketB83B92A6",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary24ArtifactsBucketB83B92A6",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-24/ServiceRole/Resource"
      }
    },
    "canary24A5077137": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary24ArtifactsBucketB83B92A6"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=24';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary24ServiceRole57F3B8BD",
            "Arn"
          ]
        },
        "Name": "shufflesharding75da29",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-24/Resource"
      }
    },
    "alarm24AE4ADD78": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary24A5077137"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-24/Resource"
      }
    },
    "Worker5Worker8474B8514": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker58AAF5F375756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker83BF111D75756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker5-Worker8/Resource"
      }
    },
    "canary25ArtifactsBucket9C8EE422": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-25/ArtifactsBucket/Resource"
      }
    },
    "canary25ArtifactsBucketPolicy101A8799": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary25ArtifactsBucket9C8EE422"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary25ArtifactsBucket9C8EE422",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary25ArtifactsBucket9C8EE422",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-25/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary25ServiceRole148166D2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary25ArtifactsBucket9C8EE422",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary25ArtifactsBucket9C8EE422",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-25/ServiceRole/Resource"
      }
    },
    "canary25E3E6589D": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary25ArtifactsBucket9C8EE422"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=25';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary25ServiceRole148166D2",
            "Arn"
          ]
        },
        "Name": "shuffleshardingfe1437",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-25/Resource"
      }
    },
    "alarm25164E7B96": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary25E3E6589D"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-25/Resource"
      }
    },
    "Worker6Worker7B4E384DE": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker6A13C0CBB5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker7A4F526855756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6-Worker7/Resource"
      }
    },
    "canary26ArtifactsBucketA232F952": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-26/ArtifactsBucket/Resource"
      }
    },
    "canary26ArtifactsBucketPolicyC7D6F836": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary26ArtifactsBucketA232F952"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary26ArtifactsBucketA232F952",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary26ArtifactsBucketA232F952",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-26/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary26ServiceRole6C84A79F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary26ArtifactsBucketA232F952",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary26ArtifactsBucketA232F952",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-26/ServiceRole/Resource"
      }
    },
    "canary2661A174A3": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary26ArtifactsBucketA232F952"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=26';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary26ServiceRole6C84A79F",
            "Arn"
          ]
        },
        "Name": "shufflesharding1d23dc",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-26/Resource"
      }
    },
    "alarm260BD2CD3D": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary2661A174A3"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-26/Resource"
      }
    },
    "Worker6Worker8BF3DDCC7": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker6A13C0CBB5756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker83BF111D75756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker6-Worker8/Resource"
      }
    },
    "canary27ArtifactsBucket7936680E": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-27/ArtifactsBucket/Resource"
      }
    },
    "canary27ArtifactsBucketPolicy6F5CBFC2": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary27ArtifactsBucket7936680E"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary27ArtifactsBucket7936680E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary27ArtifactsBucket7936680E",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-27/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary27ServiceRole7755273E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary27ArtifactsBucket7936680E",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary27ArtifactsBucket7936680E",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-27/ServiceRole/Resource"
      }
    },
    "canary27B94BF39F": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary27ArtifactsBucket7936680E"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=27';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary27ServiceRole7755273E",
            "Arn"
          ]
        },
        "Name": "shufflesharding7f9a61",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-27/Resource"
      }
    },
    "alarm2700DDEA10": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary27B94BF39F"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-27/Resource"
      }
    },
    "Worker7Worker82850D095": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker7A4F526855756e0f615c1f3fd"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker83BF111D75756e0f615c1f3fd"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker7-Worker8/Resource"
      }
    },
    "canary28ArtifactsBucket18A049A3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-28/ArtifactsBucket/Resource"
      }
    },
    "canary28ArtifactsBucketPolicyE9BF5D32": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary28ArtifactsBucket18A049A3"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary28ArtifactsBucket18A049A3",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary28ArtifactsBucket18A049A3",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-28/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary28ServiceRoleC0896161": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary28ArtifactsBucket18A049A3",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary28ArtifactsBucket18A049A3",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-28/ServiceRole/Resource"
      }
    },
    "canary283FE3C5E7": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary28ArtifactsBucket18A049A3"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=28';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary28ServiceRoleC0896161",
            "Arn"
          ]
        },
        "Name": "shufflesharding75a773",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-28/Resource"
      }
    },
    "alarm28A420F7B4": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary283FE3C5E7"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-28/Resource"
      }
    },
    "redirectLogic8024F0FE": {
      "Type": "AWS::CloudFront::Function",
      "Properties": {
        "Name": "redirectToRandomShard",
        "AutoPublish": true,
        "FunctionCode": "function handler(event) {\n        var request = event.request;\n        var querystring = request.querystring;\n        if (!querystring['number']){\n          var newUri;\n          var randomkey = getRndInteger(1, 28);\n          newUri = '/?number=' + randomkey;\n          var response = {\n            statusCode: 302,\n            statusDescription: 'Found',\n            headers: {\n              location: { value: newUri },\n            },\n          };\n          return response;\n        }\n        return request;\n      }\n\n      function getRndInteger(min, max) {\n        min = Math.ceil(min); // rounds a number up to the next largest integer\n        max = Math.floor(max); // returns the largest integer less than or equal to a given number\n        return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n      }\n",
        "FunctionConfig": {
          "Comment": "Function to redirect all incoming requests to /?number= + Random Number (i.e: /?number=1)",
          "Runtime": "cloudfront-js-1.0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/redirectLogic/Resource"
      }
    },
    "policyE16B4B70": {
      "Type": "AWS::CloudFront::OriginRequestPolicy",
      "Properties": {
        "OriginRequestPolicyConfig": {
          "CookiesConfig": {
            "CookieBehavior": "none"
          },
          "HeadersConfig": {
            "HeaderBehavior": "none"
          },
          "Name": "ShuffleShardingDemoSummit2022policy61EA8E81",
          "QueryStringsConfig": {
            "QueryStringBehavior": "all"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/policy/Resource"
      }
    },
    "CloudFrontD198EC06": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "FunctionAssociations": [
              {
                "EventType": "viewer-request",
                "FunctionARN": {
                  "Fn::GetAtt": [
                    "redirectLogic8024F0FE",
                    "FunctionARN"
                  ]
                }
              }
            ],
            "OriginRequestPolicyId": {
              "Ref": "policyE16B4B70"
            },
            "TargetOriginId": "ShuffleShardingDemoSummit2022CloudFrontOrigin1C1A871C7",
            "ViewerProtocolPolicy": "allow-all"
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "AppLoadBalancer0268F95E",
                  "DNSName"
                ]
              },
              "Id": "ShuffleShardingDemoSummit2022CloudFrontOrigin1C1A871C7"
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/CloudFront/Resource"
      }
    },
    "canarymainArtifactsBucket26B27643": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/ArtifactsBucket/Resource"
      }
    },
    "canarymainArtifactsBucketPolicy95B019C1": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canarymainArtifactsBucket26B27643"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canarymainArtifactsBucket26B27643",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canarymainArtifactsBucket26B27643",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/ArtifactsBucket/Policy/Resource"
      }
    },
    "canarymainServiceRole70CC7F6B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canarymainArtifactsBucket26B27643",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canarymainArtifactsBucket26B27643",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/ServiceRole/Resource"
      }
    },
    "canarymainEB7F983A": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canarymainArtifactsBucket26B27643"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'https://",
                {
                  "Fn::GetAtt": [
                    "CloudFrontD198EC06",
                    "DomainName"
                  ]
                },
                "';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canarymainServiceRole70CC7F6B",
            "Arn"
          ]
        },
        "Name": "shufflesharding32aa7c",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/Resource"
      }
    },
    "alarmmainB23BFCDF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canarymainEB7F983A"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-main/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31TXW/bMAz8LXtX1KYrNuxtafqBANtqOEVfB1pmbDWO5ElUgsDwfx9t2bWDFXvi8XgkqJN0I5vlrbz+BCe/UPl+UelMNlsCtRdM/W5Q3cjmtVZivTOvyVokIau02obMIHXchFIbCF8gq3DiJ27lvVUaSFvzLu7Awybpwi+gJyA8wVkkTh8ZToM3htAxHgVxkyFbEe9aHtCQ2KIKTtP5ydlQ9zv8l3goHHovNsYTGIX/1DcmCvoNoqYVqrIhPwGpUjb34MvMgss7yZSsKnCHjupBK7ACT5obIc+g4jHaFEc2dVXX7GTvyA+u3fU1dF3nRT7XaU9oBs2IP6inIV7CRT7TvYAr2M/RllnaCg0H2aQ2DhjjaEDi7E4z9RMMFJgnlif2F3JBtMJ/ls1dUPt4gQOKYeqZ59xyNlQiG+Ul19Y8z52j3TtnDcnmMRg1Pp93/Ox0oU2KfwL62eiP6Hs2w+ksjDPmeduKFL0NLr6DBBwckKLRz4HqEF/4IGnF8pu8XkBVl8Bf5/vwd666OB1jqMeTtMLYHOWbvzouv8ov3PXmtV64YEgfUKYx/gU+e5zjjQMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Outputs": {
    "LoadBalancerEndpointWorker1Worker2": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=1"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker3": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=2"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=3"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker5": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=4"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=5"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=6"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=7"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker3": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=8"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=9"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker5": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=10"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=11"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=12"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=13"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker3Worker4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=14"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker3Worker5": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=15"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker3Worker6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=16"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker3Worker7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=17"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker3Worker8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=18"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker4Worker5": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=19"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker4Worker6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=20"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker4Worker7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=21"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker4Worker8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=22"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker5Worker6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=23"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker5Worker7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=24"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker5Worker8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=25"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker6Worker7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=26"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker6Worker8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=27"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker7Worker8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=28"
          ]
        ]
      }
    },
    "CloudfrontURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CloudFrontD198EC06",
                "DomainName"
              ]
            }
          ]
        ]
      }
    },
    "CloudwatchDashboardURL": {
      "Value": "https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#dashboards:name=ShuffleShardingSummit2022"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}