{
  "Resources": {
    "vpcA2121C38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/Resource"
      }
    },
    "vpcPublicSubnet1Subnet2E65531E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/Subnet"
      }
    },
    "vpcPublicSubnet1RouteTable48A2DF9B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/RouteTable"
      }
    },
    "vpcPublicSubnet1RouteTableAssociation5D3F4579": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet1Subnet2E65531E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "vpcPublicSubnet1DefaultRoute10708846": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "vpcPublicSubnet1EIPDA49DCBE": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/EIP"
      }
    },
    "vpcPublicSubnet1NATGateway9C16659E": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "vpcPublicSubnet1Subnet2E65531E"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet1EIPDA49DCBE",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet1/NATGateway"
      }
    },
    "vpcPublicSubnet2Subnet009B674F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/Subnet"
      }
    },
    "vpcPublicSubnet2RouteTableEB40D4CB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/RouteTable"
      }
    },
    "vpcPublicSubnet2RouteTableAssociation21F81B59": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet2Subnet009B674F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "vpcPublicSubnet2DefaultRouteA1EC0F60": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "vpcPublicSubnet2EIP9B3743B1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/EIP"
      }
    },
    "vpcPublicSubnet2NATGateway9B8AE11A": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "vpcPublicSubnet2Subnet009B674F"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet2EIP9B3743B1",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet2/NATGateway"
      }
    },
    "vpcPublicSubnet3Subnet11B92D7C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/Subnet"
      }
    },
    "vpcPublicSubnet3RouteTableA3C00665": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/RouteTable"
      }
    },
    "vpcPublicSubnet3RouteTableAssociationD102D1C4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet3RouteTableA3C00665"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet3Subnet11B92D7C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/RouteTableAssociation"
      }
    },
    "vpcPublicSubnet3DefaultRoute3F356A11": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet3RouteTableA3C00665"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/DefaultRoute"
      }
    },
    "vpcPublicSubnet3EIP2C3B9D91": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/EIP"
      }
    },
    "vpcPublicSubnet3NATGateway82F6CA9E": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "vpcPublicSubnet3Subnet11B92D7C"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet3EIP2C3B9D91",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PublicSubnet3/NATGateway"
      }
    },
    "vpcPrivateSubnet1Subnet934893E8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/Subnet"
      }
    },
    "vpcPrivateSubnet1RouteTableB41A48CC": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/RouteTable"
      }
    },
    "vpcPrivateSubnet1RouteTableAssociation67945127": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet1Subnet934893E8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "vpcPrivateSubnet1DefaultRoute1AA8E2E5": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet1NATGateway9C16659E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "vpcPrivateSubnet2Subnet7031C2BA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/Subnet"
      }
    },
    "vpcPrivateSubnet2RouteTable7280F23E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/RouteTable"
      }
    },
    "vpcPrivateSubnet2RouteTableAssociation007E94D3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "vpcPrivateSubnet2DefaultRouteB0E07F99": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet2NATGateway9B8AE11A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "vpcPrivateSubnet3Subnet985AC459": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/Subnet"
      }
    },
    "vpcPrivateSubnet3RouteTable24DA79A0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/RouteTable"
      }
    },
    "vpcPrivateSubnet3RouteTableAssociationC58B3C2C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet3RouteTable24DA79A0"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet3Subnet985AC459"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "vpcPrivateSubnet3DefaultRoute30C45F47": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet3RouteTable24DA79A0"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet3NATGateway82F6CA9E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/PrivateSubnet3/DefaultRoute"
      }
    },
    "vpcIGWE57CBDCA": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/IGW"
      }
    },
    "vpcVPCGW7984C166": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "InternetGatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/vpc/VPCGW"
      }
    },
    "cwD67736ED": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"widgets\":[{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"activeConnectionsCount\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "activeConnectionsCount90209303",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"totalConnectionsCount\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "totalConnectionsCount347BE3AF",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=1\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm11F7E5553",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=2\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm2999D08C3",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=3\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm31AD0B1D4",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=4\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm41E1EABDA",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=5\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm55A7A9B80",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"/?number=6\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarm6E9103F20",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"main (/)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"annotations\":{\"alarms\":[\"",
              {
                "Fn::GetAtt": [
                  "alarmmainB23BFCDF",
                  "Arn"
                ]
              },
              "\"]},\"yAxis\":{}}}]}"
            ]
          ]
        },
        "DashboardName": "ShuffleShardingSummit2022"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/cw/Resource"
      }
    },
    "AppLoadBalancer0268F95E": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "AppLoadBalancerSecurityGroupC44CD584",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "vpcPublicSubnet1Subnet2E65531E"
          },
          {
            "Ref": "vpcPublicSubnet2Subnet009B674F"
          },
          {
            "Ref": "vpcPublicSubnet3Subnet11B92D7C"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "vpcPublicSubnet1DefaultRoute10708846",
        "vpcPublicSubnet2DefaultRouteA1EC0F60",
        "vpcPublicSubnet3DefaultRoute3F356A11"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/Resource"
      }
    },
    "AppLoadBalancerSecurityGroupC44CD584": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB ShuffleShardingDemoSummit2022AppLoadBalancer55EF14E6",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/Resource"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker1InstanceSecurityGroup8148D3A980DC07EF48": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker1InstanceSecurityGroup8148D3A9:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker1InstanceSecurityGroup59622567",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker1InstanceSecurityGroup8148D3A9:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker2InstanceSecurityGroup1B72995980E2008501": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker2InstanceSecurityGroup1B729959:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker2InstanceSecurityGroup23BD1914",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker2InstanceSecurityGroup1B729959:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker3InstanceSecurityGroup5AB6ED358044AB1314": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker3InstanceSecurityGroup5AB6ED35:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker3InstanceSecurityGroup8D987E06",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker3InstanceSecurityGroup5AB6ED35:80"
      }
    },
    "AppLoadBalancerSecurityGrouptoShuffleShardingDemoSummit2022Worker4InstanceSecurityGroup299E234E80D4F99100": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to ShuffleShardingDemoSummit2022Worker4InstanceSecurityGroup299E234E:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "Worker4InstanceSecurityGroupAB185FF0",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/SecurityGroup/to ShuffleShardingDemoSummit2022Worker4InstanceSecurityGroup299E234E:80"
      }
    },
    "AppLoadBalancerAppMainListener100632E2": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "MessageBody": "Invalid Request. Please include specific key",
              "StatusCode": "400"
            },
            "Type": "fixed-response"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "AppLoadBalancer0268F95E"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker2Rule60B444E5": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker204A96BDA"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "1"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 1
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker2Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker3RuleFB3F93E8": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker3FEF5AB85"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "2"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 2
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker3Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker1Worker4RuleB76D6B7A": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker1Worker4E3E6D1E8"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "3"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 3
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker1-Worker4Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker3Rule98EF9A72": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker3B75B2CCD"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "4"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 4
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker3Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker2Worker4Rule7B936722": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker2Worker48BEA5717"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "5"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 5
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker2-Worker4Rule/Resource"
      }
    },
    "AppLoadBalancerAppMainListenerWorker3Worker4Rule02549A56": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "Worker3Worker4B1041CD7"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "query-string",
            "QueryStringConfig": {
              "Values": [
                {
                  "Key": "number",
                  "Value": "6"
                }
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AppLoadBalancerAppMainListener100632E2"
        },
        "Priority": 6
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/AppLoadBalancer/AppMainListener/Worker3-Worker4Rule/Resource"
      }
    },
    "activeConnectionsCount90209303": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "LoadBalancerFullName"
              ]
            }
          }
        ],
        "MetricName": "ActiveConnectionCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 10
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/activeConnectionsCount/Resource"
      }
    },
    "totalConnectionsCount347BE3AF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "LoadBalancerFullName"
              ]
            }
          }
        ],
        "MetricName": "RequestCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 10
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/totalConnectionsCount/Resource"
      }
    },
    "Worker1InstanceSecurityGroup59622567": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker1/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker1"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceSecurityGroup/Resource"
      }
    },
    "Worker1InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480B350A71F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker1InstanceSecurityGroup59622567",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker1InstanceRoleC8F05946": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker1readTagsDFE7409E"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceRole/Resource"
      }
    },
    "Worker1InstanceProfileED7A1457": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker1InstanceRoleC8F05946"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/InstanceProfile"
      }
    },
    "Worker1C6282B12ab49452c2314eb4b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker1InstanceProfileED7A1457"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker1InstanceSecurityGroup59622567",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker1"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\nyum install git -y\npip install ec2-metadata\ncd ~\ngit clone https://github.com/dudutwizer/ShuffleShardingDemo-Summit2022\ncd ShuffleShardingDemo-Summit2022\n# get node into yum\ncurl --silent --location https://rpm.nodesource.com/setup_17.x | bash -\n# install node (and npm) with yum\nyum -y install nodejs\nnpm run build\ncd flask-server\nnohup python serve.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker1InstanceRoleC8F05946"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1/Resource"
      }
    },
    "Worker1readTagsDFE7409E": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1readTags/Resource"
      }
    },
    "Worker2InstanceSecurityGroup23BD1914": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker2/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker2"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceSecurityGroup/Resource"
      }
    },
    "Worker2InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480C8C06394": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker2InstanceSecurityGroup23BD1914",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker2InstanceRole4CE57811": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker2readTags643E321C"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceRole/Resource"
      }
    },
    "Worker2InstanceProfile7D1FBEB1": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker2InstanceRole4CE57811"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/InstanceProfile"
      }
    },
    "Worker21CDE475Dab49452c2314eb4b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker2InstanceProfile7D1FBEB1"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker2InstanceSecurityGroup23BD1914",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet3Subnet985AC459"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker2"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\nyum install git -y\npip install ec2-metadata\ncd ~\ngit clone https://github.com/dudutwizer/ShuffleShardingDemo-Summit2022\ncd ShuffleShardingDemo-Summit2022\n# get node into yum\ncurl --silent --location https://rpm.nodesource.com/setup_17.x | bash -\n# install node (and npm) with yum\nyum -y install nodejs\nnpm run build\ncd flask-server\nnohup python serve.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker2InstanceRole4CE57811"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2/Resource"
      }
    },
    "Worker2readTags643E321C": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2readTags/Resource"
      }
    },
    "Worker3InstanceSecurityGroup8D987E06": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker3/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker3"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceSecurityGroup/Resource"
      }
    },
    "Worker3InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA4542480D631F650": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker3InstanceSecurityGroup8D987E06",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker3InstanceRoleE786E787": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker3readTags6E2C7F22"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceRole/Resource"
      }
    },
    "Worker3InstanceProfile302920F9": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker3InstanceRoleE786E787"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/InstanceProfile"
      }
    },
    "Worker356A1B6C4ab49452c2314eb4b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker3InstanceProfile302920F9"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker3InstanceSecurityGroup8D987E06",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet1Subnet934893E8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker3"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\nyum install git -y\npip install ec2-metadata\ncd ~\ngit clone https://github.com/dudutwizer/ShuffleShardingDemo-Summit2022\ncd ShuffleShardingDemo-Summit2022\n# get node into yum\ncurl --silent --location https://rpm.nodesource.com/setup_17.x | bash -\n# install node (and npm) with yum\nyum -y install nodejs\nnpm run build\ncd flask-server\nnohup python serve.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker3InstanceRoleE786E787"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3/Resource"
      }
    },
    "Worker3readTags6E2C7F22": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3readTags/Resource"
      }
    },
    "Worker4InstanceSecurityGroupAB185FF0": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ShuffleShardingDemoSummit2022/Worker4/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker4"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceSecurityGroup/Resource"
      }
    },
    "Worker4InstanceSecurityGroupfromShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424803C1902DC": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "Worker4InstanceSecurityGroupAB185FF0",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AppLoadBalancerSecurityGroupC44CD584",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceSecurityGroup/from ShuffleShardingDemoSummit2022AppLoadBalancerSecurityGroupFAA45424:80"
      }
    },
    "Worker4InstanceRoleA8AACB09": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          },
          {
            "Ref": "Worker4readTags9AD8236D"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceRole/Resource"
      }
    },
    "Worker4InstanceProfileEAEB7A34": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Worker4InstanceRoleA8AACB09"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/InstanceProfile"
      }
    },
    "Worker49A67C52Eab49452c2314eb4b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 50,
              "VolumeType": "gp3"
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "Worker4InstanceProfileEAEB7A34"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.medium",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Worker4InstanceSecurityGroupAB185FF0",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ShuffleShardingDemoSummit2022/Worker4"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash -x\nyum update -y\nyum install python-pip -y\npip install flask\npip install boto3\nyum install git -y\npip install ec2-metadata\ncd ~\ngit clone https://github.com/dudutwizer/ShuffleShardingDemo-Summit2022\ncd ShuffleShardingDemo-Summit2022\n# get node into yum\ncurl --silent --location https://rpm.nodesource.com/setup_17.x | bash -\n# install node (and npm) with yum\nyum -y install nodejs\nnpm run build\ncd flask-server\nnohup python serve.py >>/var/log/webserver.log 2>&1 &"
        }
      },
      "DependsOn": [
        "Worker4InstanceRoleA8AACB09"
      ],
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4/Resource"
      }
    },
    "Worker4readTags9AD8236D": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker4readTags/Resource"
      }
    },
    "Worker1Worker204A96BDA": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B12ab49452c2314eb4b"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker21CDE475Dab49452c2314eb4b"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker2/Resource"
      }
    },
    "canary1ArtifactsBucket33D896F3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/ArtifactsBucket/Resource"
      }
    },
    "canary1ArtifactsBucketPolicy07FC42D3": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary1ArtifactsBucket33D896F3"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary1ArtifactsBucket33D896F3",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary1ArtifactsBucket33D896F3",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary1ServiceRole5838E95C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary1ArtifactsBucket33D896F3",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary1ArtifactsBucket33D896F3",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/ServiceRole/Resource"
      }
    },
    "canary14080B0CD": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary1ArtifactsBucket33D896F3"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=1';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary1ServiceRole5838E95C",
            "Arn"
          ]
        },
        "Name": "shuffleshardinge2181d",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-1/Resource"
      }
    },
    "alarm11F7E5553": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary14080B0CD"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-1/Resource"
      }
    },
    "Worker1Worker3FEF5AB85": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B12ab49452c2314eb4b"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker356A1B6C4ab49452c2314eb4b"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker3/Resource"
      }
    },
    "canary2ArtifactsBucket21016E4A": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/ArtifactsBucket/Resource"
      }
    },
    "canary2ArtifactsBucketPolicy8BB17232": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary2ArtifactsBucket21016E4A"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary2ArtifactsBucket21016E4A",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary2ArtifactsBucket21016E4A",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary2ServiceRole7902C7AF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary2ArtifactsBucket21016E4A",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary2ArtifactsBucket21016E4A",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/ServiceRole/Resource"
      }
    },
    "canary29E18EC3E": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary2ArtifactsBucket21016E4A"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=2';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary2ServiceRole7902C7AF",
            "Arn"
          ]
        },
        "Name": "shuffleshardingb7e912",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-2/Resource"
      }
    },
    "alarm2999D08C3": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary29E18EC3E"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-2/Resource"
      }
    },
    "Worker1Worker4E3E6D1E8": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker1C6282B12ab49452c2314eb4b"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker49A67C52Eab49452c2314eb4b"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker1-Worker4/Resource"
      }
    },
    "canary3ArtifactsBucketF9392541": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/ArtifactsBucket/Resource"
      }
    },
    "canary3ArtifactsBucketPolicy420D8DBC": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary3ArtifactsBucketF9392541"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary3ArtifactsBucketF9392541",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary3ArtifactsBucketF9392541",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary3ServiceRoleBCD653D4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary3ArtifactsBucketF9392541",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary3ArtifactsBucketF9392541",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/ServiceRole/Resource"
      }
    },
    "canary322244DE0": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary3ArtifactsBucketF9392541"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=3';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary3ServiceRoleBCD653D4",
            "Arn"
          ]
        },
        "Name": "shufflesharding807db1",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-3/Resource"
      }
    },
    "alarm31AD0B1D4": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary322244DE0"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-3/Resource"
      }
    },
    "Worker2Worker3B75B2CCD": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475Dab49452c2314eb4b"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker356A1B6C4ab49452c2314eb4b"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker3/Resource"
      }
    },
    "canary4ArtifactsBucketB70F6265": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/ArtifactsBucket/Resource"
      }
    },
    "canary4ArtifactsBucketPolicy71FCF8FD": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary4ArtifactsBucketB70F6265"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary4ArtifactsBucketB70F6265",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary4ArtifactsBucketB70F6265",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary4ServiceRole6785A63E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary4ArtifactsBucketB70F6265",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary4ArtifactsBucketB70F6265",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/ServiceRole/Resource"
      }
    },
    "canary4CE6F078C": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary4ArtifactsBucketB70F6265"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=4';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary4ServiceRole6785A63E",
            "Arn"
          ]
        },
        "Name": "shuffleshardingcefe9c",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-4/Resource"
      }
    },
    "alarm41E1EABDA": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary4CE6F078C"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-4/Resource"
      }
    },
    "Worker2Worker48BEA5717": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker21CDE475Dab49452c2314eb4b"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker49A67C52Eab49452c2314eb4b"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker2-Worker4/Resource"
      }
    },
    "canary5ArtifactsBucketD0E7CC1F": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/ArtifactsBucket/Resource"
      }
    },
    "canary5ArtifactsBucketPolicy0E1B4604": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary5ArtifactsBucketD0E7CC1F"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary5ArtifactsBucketD0E7CC1F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary5ArtifactsBucketD0E7CC1F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary5ServiceRole36F702AC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary5ArtifactsBucketD0E7CC1F",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary5ArtifactsBucketD0E7CC1F",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/ServiceRole/Resource"
      }
    },
    "canary5DFC6FE7A": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary5ArtifactsBucketD0E7CC1F"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=5';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary5ServiceRole36F702AC",
            "Arn"
          ]
        },
        "Name": "shuffleshardingedddb8",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-5/Resource"
      }
    },
    "alarm55A7A9B80": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary5DFC6FE7A"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-5/Resource"
      }
    },
    "Worker3Worker4B1041CD7": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "Targets": [
          {
            "Id": {
              "Ref": "Worker356A1B6C4ab49452c2314eb4b"
            },
            "Port": 80
          },
          {
            "Id": {
              "Ref": "Worker49A67C52Eab49452c2314eb4b"
            },
            "Port": 80
          }
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/Worker3-Worker4/Resource"
      }
    },
    "canary6ArtifactsBucket88273382": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/ArtifactsBucket/Resource"
      }
    },
    "canary6ArtifactsBucketPolicyFAD60CAE": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canary6ArtifactsBucket88273382"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canary6ArtifactsBucket88273382",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canary6ArtifactsBucket88273382",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/ArtifactsBucket/Policy/Resource"
      }
    },
    "canary6ServiceRole6191E6F6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canary6ArtifactsBucket88273382",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canary6ArtifactsBucket88273382",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/ServiceRole/Resource"
      }
    },
    "canary627C8465C": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canary6ArtifactsBucket88273382"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'http://",
                {
                  "Fn::GetAtt": [
                    "AppLoadBalancer0268F95E",
                    "DNSName"
                  ]
                },
                "/?number=6';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canary6ServiceRole6191E6F6",
            "Arn"
          ]
        },
        "Name": "shufflesharding22850d",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-6/Resource"
      }
    },
    "alarm6E9103F20": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canary627C8465C"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-6/Resource"
      }
    },
    "redirectLogic8024F0FE": {
      "Type": "AWS::CloudFront::Function",
      "Properties": {
        "Name": "redirectToRandomShard",
        "AutoPublish": true,
        "FunctionCode": "function handler(event) {\n        var request = event.request;\n        var querystring = request.querystring;\n        if (!querystring['number']){\n          var newUri;\n          var randomkey = getRndInteger(1, 6);\n          newUri = '/?number=' + randomkey;\n          var response = {\n            statusCode: 302,\n            statusDescription: 'Found',\n            headers: {\n              location: { value: newUri },\n            },\n          };\n          return response;\n        }\n        return request;\n      }\n\n      function getRndInteger(min, max) {\n        min = Math.ceil(min); // rounds a number up to the next largest integer\n        max = Math.floor(max); // returns the largest integer less than or equal to a given number\n        return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n      }\n",
        "FunctionConfig": {
          "Comment": "Function to redirect all incoming requests to /?number= + Random Number (i.e: /?number=1)",
          "Runtime": "cloudfront-js-1.0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/redirectLogic/Resource"
      }
    },
    "policyE16B4B70": {
      "Type": "AWS::CloudFront::OriginRequestPolicy",
      "Properties": {
        "OriginRequestPolicyConfig": {
          "CookiesConfig": {
            "CookieBehavior": "none"
          },
          "HeadersConfig": {
            "HeaderBehavior": "none"
          },
          "Name": "ShuffleShardingDemoSummit2022policy61EA8E81",
          "QueryStringsConfig": {
            "QueryStringBehavior": "all"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/policy/Resource"
      }
    },
    "CloudFrontD198EC06": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "FunctionAssociations": [
              {
                "EventType": "viewer-request",
                "FunctionARN": {
                  "Fn::GetAtt": [
                    "redirectLogic8024F0FE",
                    "FunctionARN"
                  ]
                }
              }
            ],
            "OriginRequestPolicyId": {
              "Ref": "policyE16B4B70"
            },
            "TargetOriginId": "ShuffleShardingDemoSummit2022CloudFrontOrigin1C1A871C7",
            "ViewerProtocolPolicy": "allow-all"
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "AppLoadBalancer0268F95E",
                  "DNSName"
                ]
              },
              "Id": "ShuffleShardingDemoSummit2022CloudFrontOrigin1C1A871C7"
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/CloudFront/Resource"
      }
    },
    "canarymainArtifactsBucket26B27643": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/ArtifactsBucket/Resource"
      }
    },
    "canarymainArtifactsBucketPolicy95B019C1": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "canarymainArtifactsBucket26B27643"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "canarymainArtifactsBucket26B27643",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "canarymainArtifactsBucket26B27643",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/ArtifactsBucket/Policy/Resource"
      }
    },
    "canarymainServiceRole70CC7F6B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "canarymainArtifactsBucket26B27643",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "canarymainArtifactsBucket26B27643",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:us-east-1:117923233529:log-group:/aws/lambda/cwsyn-*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/ServiceRole/Resource"
      }
    },
    "canarymainEB7F983A": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "canarymainArtifactsBucket26B27643"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": {
            "Fn::Join": [
              "",
              [
                "\n    const synthetics = require('Synthetics');\n    const log = require('SyntheticsLogger');\n    \n    const pageLoadBlueprint = async function () {\n    const url = 'https://",
                {
                  "Fn::GetAtt": [
                    "CloudFrontD198EC06",
                    "DomainName"
                  ]
                },
                "';\n\n    const page = await synthetics.getPage();\n    const response = await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });\n    // Wait for page to render. Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    // This will take a screenshot that will be included in test output artifacts.\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    const pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n      throw 'Failed to load page!';\n    }\n    };\n\n    exports.handler = async () => {\n      return await pageLoadBlueprint();\n    };\n    "
              ]
            ]
          }
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "canarymainServiceRole70CC7F6B",
            "Arn"
          ]
        },
        "Name": "shufflesharding32aa7c",
        "RuntimeVersion": "syn-nodejs-puppeteer-3.4",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/canary-main/Resource"
      }
    },
    "alarmmainB23BFCDF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 5,
        "Dimensions": [
          {
            "Name": "CanaryName",
            "Value": {
              "Ref": "canarymainEB7F983A"
            }
          }
        ],
        "MetricName": "SuccessPercent",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/alarm-main/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31TXW/bMAz8LXtX1KYrNuxtafqBANtqOEVfB1pmbDWO5ElUgsDwfx9t2bWDFXvi8XgkqJN0I5vlrbz+BCe/UPl+UelMNlsCtRdM/W5Q3cjmtVZivTOvyVokIau02obMIHXchFIbCF8gq3DiJ27lvVUaSFvzLu7Awybpwi+gJyA8wVkkTh8ZToM3htAxHgVxkyFbEe9aHtCQ2KIKTtP5ydlQ9zv8l3goHHovNsYTGIX/1DcmCvoNoqYVqrIhPwGpUjb34MvMgss7yZSsKnCHjupBK7ACT5obIc+g4jHaFEc2dVXX7GTvyA+u3fU1dF3nRT7XaU9oBs2IP6inIV7CRT7TvYAr2M/RllnaCg0H2aQ2DhjjaEDi7E4z9RMMFJgnlif2F3JBtMJ/ls1dUPt4gQOKYeqZ59xyNlQiG+Ul19Y8z52j3TtnDcnmMRg1Pp93/Ox0oU2KfwL62eiP6Hs2w+ksjDPmeduKFL0NLr6DBBwckKLRz4HqEF/4IGnF8pu8XkBVl8Bf5/vwd666OB1jqMeTtMLYHOWbvzouv8ov3PXmtV64YEgfUKYx/gU+e5zjjQMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "ShuffleShardingDemoSummit2022/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Outputs": {
    "LoadBalancerEndpointWorker1Worker2": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=1"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker3": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=2"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker1Worker4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=3"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker3": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=4"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker2Worker4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=5"
          ]
        ]
      }
    },
    "LoadBalancerEndpointWorker3Worker4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "AppLoadBalancer0268F95E",
                "DNSName"
              ]
            },
            "/?number=6"
          ]
        ]
      }
    },
    "CloudfrontURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CloudFrontD198EC06",
                "DomainName"
              ]
            }
          ]
        ]
      }
    },
    "CloudwatchDashboardURL": {
      "Value": "https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#dashboards:name=ShuffleShardingSummit2022"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}